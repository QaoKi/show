
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type SpecialFormat3 struct {
    ScreenDirection int32
    Speed int32
    OuterFishId int32
    OuterFishNum int32
    InnerFishId int32
    InnerFishNum int32
    MidFishId int32
}

const TypeId_SpecialFormat3 = -1616471997

func (*SpecialFormat3) GetTypeId() int32 {
    return -1616471997
}

func NewSpecialFormat3(_buf map[string]interface{}) (_v *SpecialFormat3, err error) {
    _v = &SpecialFormat3{}
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["screenDirection"].(float64); !_ok_ { err = errors.New("screenDirection error"); return }; _v.ScreenDirection = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["speed"].(float64); !_ok_ { err = errors.New("speed error"); return }; _v.Speed = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["outerFishId"].(float64); !_ok_ { err = errors.New("outerFishId error"); return }; _v.OuterFishId = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["outerFishNum"].(float64); !_ok_ { err = errors.New("outerFishNum error"); return }; _v.OuterFishNum = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["innerFishId"].(float64); !_ok_ { err = errors.New("innerFishId error"); return }; _v.InnerFishId = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["innerFishNum"].(float64); !_ok_ { err = errors.New("innerFishNum error"); return }; _v.InnerFishNum = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["midFishId"].(float64); !_ok_ { err = errors.New("midFishId error"); return }; _v.MidFishId = int32(_tempNum_) }
    return
}

