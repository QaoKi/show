
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type SpecialFormat1 struct {
    Lot int32
    Speed int32
    FishNum int32
    LotInterval int32
    FishId int32
}

const TypeId_SpecialFormat1 = -1616471999

func (*SpecialFormat1) GetTypeId() int32 {
    return -1616471999
}

func NewSpecialFormat1(_buf map[string]interface{}) (_v *SpecialFormat1, err error) {
    _v = &SpecialFormat1{}
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["lot"].(float64); !_ok_ { err = errors.New("lot error"); return }; _v.Lot = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["speed"].(float64); !_ok_ { err = errors.New("speed error"); return }; _v.Speed = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["fishNum"].(float64); !_ok_ { err = errors.New("fishNum error"); return }; _v.FishNum = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["lotInterval"].(float64); !_ok_ { err = errors.New("lotInterval error"); return }; _v.LotInterval = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["fishId"].(float64); !_ok_ { err = errors.New("fishId error"); return }; _v.FishId = int32(_tempNum_) }
    return
}

