
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type SpecialFormat2 struct {
    Lot int32
    Speed int32
    FirstPathFishId int32
    SecondPathFishId int32
    ThirdPathFishId int32
}

const TypeId_SpecialFormat2 = -1616471998

func (*SpecialFormat2) GetTypeId() int32 {
    return -1616471998
}

func NewSpecialFormat2(_buf map[string]interface{}) (_v *SpecialFormat2, err error) {
    _v = &SpecialFormat2{}
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["lot"].(float64); !_ok_ { err = errors.New("lot error"); return }; _v.Lot = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["speed"].(float64); !_ok_ { err = errors.New("speed error"); return }; _v.Speed = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["firstPathFishId"].(float64); !_ok_ { err = errors.New("firstPathFishId error"); return }; _v.FirstPathFishId = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["secondPathFishId"].(float64); !_ok_ { err = errors.New("secondPathFishId error"); return }; _v.SecondPathFishId = int32(_tempNum_) }
    { var _ok_ bool; var _tempNum_ float64; if _tempNum_, _ok_ = _buf["thirdPathFishId"].(float64); !_ok_ { err = errors.New("thirdPathFishId error"); return }; _v.ThirdPathFishId = int32(_tempNum_) }
    return
}

