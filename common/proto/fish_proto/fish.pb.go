// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: fish.proto

package fish_proto

import (
	common_proto "bygame/common/proto/common_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FishUserStatus int32

const (
	FishUserStatus_Normal             FishUserStatus = 0
	FishUserStatus_PlayBufferZhuanPan FishUserStatus = 1 // 在玩 buffer 转盘
	FishUserStatus_PlayLaBa           FishUserStatus = 2 // 在玩拉霸
	FishUserStatus_PlayMoGu           FishUserStatus = 3 // 在玩蘑菇庄园
	FishUserStatus_PlayJinChan        FishUserStatus = 4 // 在玩金蟾
	FishUserStatus_PlayAthena         FishUserStatus = 5 // 在玩雅典娜
	FishUserStatus_PlayPoseidon       FishUserStatus = 6 // 在玩波塞冬
	FishUserStatus_PlayHardess        FishUserStatus = 7 // 在玩哈迪斯
)

// Enum value maps for FishUserStatus.
var (
	FishUserStatus_name = map[int32]string{
		0: "Normal",
		1: "PlayBufferZhuanPan",
		2: "PlayLaBa",
		3: "PlayMoGu",
		4: "PlayJinChan",
		5: "PlayAthena",
		6: "PlayPoseidon",
		7: "PlayHardess",
	}
	FishUserStatus_value = map[string]int32{
		"Normal":             0,
		"PlayBufferZhuanPan": 1,
		"PlayLaBa":           2,
		"PlayMoGu":           3,
		"PlayJinChan":        4,
		"PlayAthena":         5,
		"PlayPoseidon":       6,
		"PlayHardess":        7,
	}
)

func (x FishUserStatus) Enum() *FishUserStatus {
	p := new(FishUserStatus)
	*p = x
	return p
}

func (x FishUserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishUserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_fish_proto_enumTypes[0].Descriptor()
}

func (FishUserStatus) Type() protoreflect.EnumType {
	return &file_fish_proto_enumTypes[0]
}

func (x FishUserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishUserStatus.Descriptor instead.
func (FishUserStatus) EnumDescriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{0}
}

// ************ 退出房间 与 断线重连等相关消息 **************
type UserQuitReason int32

const (
	UserQuitReason_ZhuDong    UserQuitReason = 0 // 主动退出
	UserQuitReason_DisConnect UserQuitReason = 1 // 断线
	UserQuitReason_KickOut    UserQuitReason = 2 // 被踢出去
)

// Enum value maps for UserQuitReason.
var (
	UserQuitReason_name = map[int32]string{
		0: "ZhuDong",
		1: "DisConnect",
		2: "KickOut",
	}
	UserQuitReason_value = map[string]int32{
		"ZhuDong":    0,
		"DisConnect": 1,
		"KickOut":    2,
	}
)

func (x UserQuitReason) Enum() *UserQuitReason {
	p := new(UserQuitReason)
	*p = x
	return p
}

func (x UserQuitReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserQuitReason) Descriptor() protoreflect.EnumDescriptor {
	return file_fish_proto_enumTypes[1].Descriptor()
}

func (UserQuitReason) Type() protoreflect.EnumType {
	return &file_fish_proto_enumTypes[1]
}

func (x UserQuitReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserQuitReason.Descriptor instead.
func (UserQuitReason) EnumDescriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{1}
}

type FishBulletSkill int32

const (
	FishBulletSkill_None    FishBulletSkill = 0
	FishBulletSkill_SuoDing FishBulletSkill = 1 // 锁定
	FishBulletSkill_JiaSu   FishBulletSkill = 2 // 加速
	FishBulletSkill_QiangJi FishBulletSkill = 3 // 强击
)

// Enum value maps for FishBulletSkill.
var (
	FishBulletSkill_name = map[int32]string{
		0: "None",
		1: "SuoDing",
		2: "JiaSu",
		3: "QiangJi",
	}
	FishBulletSkill_value = map[string]int32{
		"None":    0,
		"SuoDing": 1,
		"JiaSu":   2,
		"QiangJi": 3,
	}
)

func (x FishBulletSkill) Enum() *FishBulletSkill {
	p := new(FishBulletSkill)
	*p = x
	return p
}

func (x FishBulletSkill) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FishBulletSkill) Descriptor() protoreflect.EnumDescriptor {
	return file_fish_proto_enumTypes[2].Descriptor()
}

func (FishBulletSkill) Type() protoreflect.EnumType {
	return &file_fish_proto_enumTypes[2]
}

func (x FishBulletSkill) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FishBulletSkill.Descriptor instead.
func (FishBulletSkill) EnumDescriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{2}
}

// ************ 女神赐福 *************
// 奖励类型
type GodBlessRewardType int32

const (
	GodBlessRewardType_Bronze GodBlessRewardType = 0 // 青铜
	GodBlessRewardType_Silver GodBlessRewardType = 1 // 白银
	GodBlessRewardType_Gold   GodBlessRewardType = 2 // 黄金
)

// Enum value maps for GodBlessRewardType.
var (
	GodBlessRewardType_name = map[int32]string{
		0: "Bronze",
		1: "Silver",
		2: "Gold",
	}
	GodBlessRewardType_value = map[string]int32{
		"Bronze": 0,
		"Silver": 1,
		"Gold":   2,
	}
)

func (x GodBlessRewardType) Enum() *GodBlessRewardType {
	p := new(GodBlessRewardType)
	*p = x
	return p
}

func (x GodBlessRewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GodBlessRewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_fish_proto_enumTypes[3].Descriptor()
}

func (GodBlessRewardType) Type() protoreflect.EnumType {
	return &file_fish_proto_enumTypes[3]
}

func (x GodBlessRewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GodBlessRewardType.Descriptor instead.
func (GodBlessRewardType) EnumDescriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{3}
}

// 坐标
type Vec2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Vec2) Reset() {
	*x = Vec2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vec2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec2) ProtoMessage() {}

func (x *Vec2) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec2.ProtoReflect.Descriptor instead.
func (*Vec2) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{0}
}

func (x *Vec2) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec2) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type FishInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishId   string        `protobuf:"bytes,1,opt,name=fishId,proto3" json:"fishId,omitempty"`
	PathList []*BezierPath `protobuf:"bytes,2,rep,name=pathList,proto3" json:"pathList,omitempty"` // 鱼游走路线上的四个坐标
	Cid      int32         `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`          // 鱼的配置
	Speed    int32         `protobuf:"varint,4,opt,name=speed,proto3" json:"speed,omitempty"`      // 鱼的速度
}

func (x *FishInfo) Reset() {
	*x = FishInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishInfo) ProtoMessage() {}

func (x *FishInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishInfo.ProtoReflect.Descriptor instead.
func (*FishInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{1}
}

func (x *FishInfo) GetFishId() string {
	if x != nil {
		return x.FishId
	}
	return ""
}

func (x *FishInfo) GetPathList() []*BezierPath {
	if x != nil {
		return x.PathList
	}
	return nil
}

func (x *FishInfo) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *FishInfo) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type BezierPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    []*Vec2 `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`        // 鱼游走路线上的四个坐标
	GenTime int64   `protobuf:"varint,2,opt,name=genTime,proto3" json:"genTime,omitempty"` // 创建时间
	DesTime int64   `protobuf:"varint,3,opt,name=desTime,proto3" json:"desTime,omitempty"` // 销毁时间
}

func (x *BezierPath) Reset() {
	*x = BezierPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BezierPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BezierPath) ProtoMessage() {}

func (x *BezierPath) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BezierPath.ProtoReflect.Descriptor instead.
func (*BezierPath) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{2}
}

func (x *BezierPath) GetPath() []*Vec2 {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *BezierPath) GetGenTime() int64 {
	if x != nil {
		return x.GenTime
	}
	return 0
}

func (x *BezierPath) GetDesTime() int64 {
	if x != nil {
		return x.DesTime
	}
	return 0
}

// 房间信息
type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fishs                 []*FishInfo     `protobuf:"bytes,1,rep,name=fishs,proto3" json:"fishs,omitempty"`
	UserInfos             []*FishUserInfo `protobuf:"bytes,2,rep,name=userInfos,proto3" json:"userInfos,omitempty"`
	LatestFreezeStartTime int64           `protobuf:"varint,3,opt,name=latestFreezeStartTime,proto3" json:"latestFreezeStartTime,omitempty"` // 最近一次冰冻的开始时间
	LatestFreezeEndTime   int64           `protobuf:"varint,4,opt,name=latestFreezeEndTime,proto3" json:"latestFreezeEndTime,omitempty"`     // 最近一次冰冻的结束时间
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{3}
}

func (x *RoomInfo) GetFishs() []*FishInfo {
	if x != nil {
		return x.Fishs
	}
	return nil
}

func (x *RoomInfo) GetUserInfos() []*FishUserInfo {
	if x != nil {
		return x.UserInfos
	}
	return nil
}

func (x *RoomInfo) GetLatestFreezeStartTime() int64 {
	if x != nil {
		return x.LatestFreezeStartTime
	}
	return 0
}

func (x *RoomInfo) GetLatestFreezeEndTime() int64 {
	if x != nil {
		return x.LatestFreezeEndTime
	}
	return 0
}

type FishUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo   *common_proto.UserInfo `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	SeatId     int32                  `protobuf:"varint,2,opt,name=seatId,proto3" json:"seatId,omitempty"`
	GunValue   int32                  `protobuf:"varint,3,opt,name=gunValue,proto3" json:"gunValue,omitempty"`   // 炮值
	IsDisConn  bool                   `protobuf:"varint,4,opt,name=isDisConn,proto3" json:"isDisConn,omitempty"` // 是否断线
	UserStatus FishUserStatus         `protobuf:"varint,5,opt,name=userStatus,proto3,enum=fish.FishUserStatus" json:"userStatus,omitempty"`
}

func (x *FishUserInfo) Reset() {
	*x = FishUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishUserInfo) ProtoMessage() {}

func (x *FishUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishUserInfo.ProtoReflect.Descriptor instead.
func (*FishUserInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{4}
}

func (x *FishUserInfo) GetUserInfo() *common_proto.UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *FishUserInfo) GetSeatId() int32 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *FishUserInfo) GetGunValue() int32 {
	if x != nil {
		return x.GunValue
	}
	return 0
}

func (x *FishUserInfo) GetIsDisConn() bool {
	if x != nil {
		return x.IsDisConn
	}
	return false
}

func (x *FishUserInfo) GetUserStatus() FishUserStatus {
	if x != nil {
		return x.UserStatus
	}
	return FishUserStatus_Normal
}

// 杀鱼的数据
type KillFishData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishId  string `protobuf:"bytes,1,opt,name=fishId,proto3" json:"fishId,omitempty"`
	AddCoin int32  `protobuf:"varint,2,opt,name=addCoin,proto3" json:"addCoin,omitempty"`
	Rate    int32  `protobuf:"varint,3,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *KillFishData) Reset() {
	*x = KillFishData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillFishData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillFishData) ProtoMessage() {}

func (x *KillFishData) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillFishData.ProtoReflect.Descriptor instead.
func (*KillFishData) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{5}
}

func (x *KillFishData) GetFishId() string {
	if x != nil {
		return x.FishId
	}
	return ""
}

func (x *KillFishData) GetAddCoin() int32 {
	if x != nil {
		return x.AddCoin
	}
	return 0
}

func (x *KillFishData) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

// ************ 加入房间 **************
type ReqUserJoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomType int32 `protobuf:"varint,1,opt,name=roomType,proto3" json:"roomType,omitempty"`
}

func (x *ReqUserJoinRoom) Reset() {
	*x = ReqUserJoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserJoinRoom) ProtoMessage() {}

func (x *ReqUserJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserJoinRoom.ProtoReflect.Descriptor instead.
func (*ReqUserJoinRoom) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{6}
}

func (x *ReqUserJoinRoom) GetRoomType() int32 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

type RetUserJoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomInfo *RoomInfo `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	ReConn   int32     `protobuf:"varint,2,opt,name=reConn,proto3" json:"reConn,omitempty"` // 是否是断线重连，0：不是，1：是
}

func (x *RetUserJoinRoom) Reset() {
	*x = RetUserJoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetUserJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetUserJoinRoom) ProtoMessage() {}

func (x *RetUserJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetUserJoinRoom.ProtoReflect.Descriptor instead.
func (*RetUserJoinRoom) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{7}
}

func (x *RetUserJoinRoom) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

func (x *RetUserJoinRoom) GetReConn() int32 {
	if x != nil {
		return x.ReConn
	}
	return 0
}

type EventFishUserJoinRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *FishUserInfo `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *EventFishUserJoinRoom) Reset() {
	*x = EventFishUserJoinRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishUserJoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishUserJoinRoom) ProtoMessage() {}

func (x *EventFishUserJoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishUserJoinRoom.ProtoReflect.Descriptor instead.
func (*EventFishUserJoinRoom) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{8}
}

func (x *EventFishUserJoinRoom) GetUserInfo() *FishUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type ReqUserQuitRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomType int32 `protobuf:"varint,1,opt,name=roomType,proto3" json:"roomType,omitempty"`
}

func (x *ReqUserQuitRoom) Reset() {
	*x = ReqUserQuitRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserQuitRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserQuitRoom) ProtoMessage() {}

func (x *ReqUserQuitRoom) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserQuitRoom.ProtoReflect.Descriptor instead.
func (*ReqUserQuitRoom) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{9}
}

func (x *ReqUserQuitRoom) GetRoomType() int32 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

type RetUserQuitRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetUserQuitRoom) Reset() {
	*x = RetUserQuitRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetUserQuitRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetUserQuitRoom) ProtoMessage() {}

func (x *RetUserQuitRoom) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetUserQuitRoom.ProtoReflect.Descriptor instead.
func (*RetUserQuitRoom) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{10}
}

// 退出房间
type EventFishUserQuitRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    string         `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Reason UserQuitReason `protobuf:"varint,2,opt,name=reason,proto3,enum=fish.UserQuitReason" json:"reason,omitempty"`
}

func (x *EventFishUserQuitRoom) Reset() {
	*x = EventFishUserQuitRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishUserQuitRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishUserQuitRoom) ProtoMessage() {}

func (x *EventFishUserQuitRoom) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishUserQuitRoom.ProtoReflect.Descriptor instead.
func (*EventFishUserQuitRoom) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{11}
}

func (x *EventFishUserQuitRoom) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishUserQuitRoom) GetReason() UserQuitReason {
	if x != nil {
		return x.Reason
	}
	return UserQuitReason_ZhuDong
}

// 断线
type EventFishUserDisConnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *EventFishUserDisConnect) Reset() {
	*x = EventFishUserDisConnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishUserDisConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishUserDisConnect) ProtoMessage() {}

func (x *EventFishUserDisConnect) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishUserDisConnect.ProtoReflect.Descriptor instead.
func (*EventFishUserDisConnect) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{12}
}

func (x *EventFishUserDisConnect) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

// ************ 鱼生成后广播 **************
type EventFishGenFish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishList []*FishInfo `protobuf:"bytes,1,rep,name=fishList,proto3" json:"fishList,omitempty"`
}

func (x *EventFishGenFish) Reset() {
	*x = EventFishGenFish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishGenFish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishGenFish) ProtoMessage() {}

func (x *EventFishGenFish) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishGenFish.ProtoReflect.Descriptor instead.
func (*EventFishGenFish) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{13}
}

func (x *EventFishGenFish) GetFishList() []*FishInfo {
	if x != nil {
		return x.FishList
	}
	return nil
}

type ReqFishPlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target        *Vec2  `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`                // 目标点
	Bet           int32  `protobuf:"varint,2,opt,name=bet,proto3" json:"bet,omitempty"`                     // 投注，炮值
	FishId        string `protobuf:"bytes,3,opt,name=fishId,proto3" json:"fishId,omitempty"`                // 鱼
	BulletId      string `protobuf:"bytes,4,opt,name=bulletId,proto3" json:"bulletId,omitempty"`            // 子弹id
	BulletSkill   int32  `protobuf:"varint,5,opt,name=bulletSkill,proto3" json:"bulletSkill,omitempty"`     // 子弹技能
	BulletGenTime int64  `protobuf:"varint,6,opt,name=bulletGenTime,proto3" json:"bulletGenTime,omitempty"` // 子弹生成时间
}

func (x *ReqFishPlay) Reset() {
	*x = ReqFishPlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishPlay) ProtoMessage() {}

func (x *ReqFishPlay) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishPlay.ProtoReflect.Descriptor instead.
func (*ReqFishPlay) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{14}
}

func (x *ReqFishPlay) GetTarget() *Vec2 {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ReqFishPlay) GetBet() int32 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *ReqFishPlay) GetFishId() string {
	if x != nil {
		return x.FishId
	}
	return ""
}

func (x *ReqFishPlay) GetBulletId() string {
	if x != nil {
		return x.BulletId
	}
	return ""
}

func (x *ReqFishPlay) GetBulletSkill() int32 {
	if x != nil {
		return x.BulletSkill
	}
	return 0
}

func (x *ReqFishPlay) GetBulletGenTime() int64 {
	if x != nil {
		return x.BulletGenTime
	}
	return 0
}

type RetFishPlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetFishPlay) Reset() {
	*x = RetFishPlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishPlay) ProtoMessage() {}

func (x *RetFishPlay) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishPlay.ProtoReflect.Descriptor instead.
func (*RetFishPlay) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{15}
}

type EventFishPlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid           string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Target        *Vec2  `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Bet           int32  `protobuf:"varint,3,opt,name=bet,proto3" json:"bet,omitempty"`
	FishId        string `protobuf:"bytes,4,opt,name=fishId,proto3" json:"fishId,omitempty"`
	BulletId      string `protobuf:"bytes,5,opt,name=bulletId,proto3" json:"bulletId,omitempty"`            // 子弹id
	BulletSkill   int32  `protobuf:"varint,6,opt,name=bulletSkill,proto3" json:"bulletSkill,omitempty"`     // 子弹技能
	BulletGenTime int64  `protobuf:"varint,7,opt,name=bulletGenTime,proto3" json:"bulletGenTime,omitempty"` // 子弹生成时间
}

func (x *EventFishPlay) Reset() {
	*x = EventFishPlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishPlay) ProtoMessage() {}

func (x *EventFishPlay) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishPlay.ProtoReflect.Descriptor instead.
func (*EventFishPlay) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{16}
}

func (x *EventFishPlay) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishPlay) GetTarget() *Vec2 {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *EventFishPlay) GetBet() int32 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *EventFishPlay) GetFishId() string {
	if x != nil {
		return x.FishId
	}
	return ""
}

func (x *EventFishPlay) GetBulletId() string {
	if x != nil {
		return x.BulletId
	}
	return ""
}

func (x *EventFishPlay) GetBulletSkill() int32 {
	if x != nil {
		return x.BulletSkill
	}
	return 0
}

func (x *EventFishPlay) GetBulletGenTime() int64 {
	if x != nil {
		return x.BulletGenTime
	}
	return 0
}

// ************* 切换炮台 ********
type ReqFishChangeGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bet int32 `protobuf:"varint,1,opt,name=bet,proto3" json:"bet,omitempty"` // 炮值 不同房间根据房间配置炮值计算炮的形态
}

func (x *ReqFishChangeGun) Reset() {
	*x = ReqFishChangeGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishChangeGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishChangeGun) ProtoMessage() {}

func (x *ReqFishChangeGun) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishChangeGun.ProtoReflect.Descriptor instead.
func (*ReqFishChangeGun) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{17}
}

func (x *ReqFishChangeGun) GetBet() int32 {
	if x != nil {
		return x.Bet
	}
	return 0
}

type RetFishChangeGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetFishChangeGun) Reset() {
	*x = RetFishChangeGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishChangeGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishChangeGun) ProtoMessage() {}

func (x *RetFishChangeGun) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishChangeGun.ProtoReflect.Descriptor instead.
func (*RetFishChangeGun) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{18}
}

type EventFishChangeGun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Bet int32  `protobuf:"varint,2,opt,name=bet,proto3" json:"bet,omitempty"`
}

func (x *EventFishChangeGun) Reset() {
	*x = EventFishChangeGun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishChangeGun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishChangeGun) ProtoMessage() {}

func (x *EventFishChangeGun) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishChangeGun.ProtoReflect.Descriptor instead.
func (*EventFishChangeGun) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{19}
}

func (x *EventFishChangeGun) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishChangeGun) GetBet() int32 {
	if x != nil {
		return x.Bet
	}
	return 0
}

// ************ 击中 *************  可能有aoe技能
type ReqFishHit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HitInfo []*FishHitInfo `protobuf:"bytes,1,rep,name=hitInfo,proto3" json:"hitInfo,omitempty"`
}

func (x *ReqFishHit) Reset() {
	*x = ReqFishHit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishHit) ProtoMessage() {}

func (x *ReqFishHit) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishHit.ProtoReflect.Descriptor instead.
func (*ReqFishHit) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{20}
}

func (x *ReqFishHit) GetHitInfo() []*FishHitInfo {
	if x != nil {
		return x.HitInfo
	}
	return nil
}

type RetFishHit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetFishHit) Reset() {
	*x = RetFishHit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishHit) ProtoMessage() {}

func (x *RetFishHit) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishHit.ProtoReflect.Descriptor instead.
func (*RetFishHit) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{21}
}

type FishHitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FishId      string `protobuf:"bytes,1,opt,name=fishId,proto3" json:"fishId,omitempty"`
	Bet         int64  `protobuf:"varint,2,opt,name=bet,proto3" json:"bet,omitempty"`
	BulletId    string `protobuf:"bytes,3,opt,name=bulletId,proto3" json:"bulletId,omitempty"`        // 子弹id
	BulletSkill int32  `protobuf:"varint,4,opt,name=bulletSkill,proto3" json:"bulletSkill,omitempty"` // 子弹技能
}

func (x *FishHitInfo) Reset() {
	*x = FishHitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FishHitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FishHitInfo) ProtoMessage() {}

func (x *FishHitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FishHitInfo.ProtoReflect.Descriptor instead.
func (*FishHitInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{22}
}

func (x *FishHitInfo) GetFishId() string {
	if x != nil {
		return x.FishId
	}
	return ""
}

func (x *FishHitInfo) GetBet() int64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *FishHitInfo) GetBulletId() string {
	if x != nil {
		return x.BulletId
	}
	return ""
}

func (x *FishHitInfo) GetBulletSkill() int32 {
	if x != nil {
		return x.BulletSkill
	}
	return 0
}

// *********** 击杀 *************  谁击杀了什么鱼 因为有一条鱼的倍率是变动的所以这里也要传
type EventFishKill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid      string          `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	KillList []*KillFishData `protobuf:"bytes,2,rep,name=KillList,proto3" json:"KillList,omitempty"`
}

func (x *EventFishKill) Reset() {
	*x = EventFishKill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishKill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishKill) ProtoMessage() {}

func (x *EventFishKill) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishKill.ProtoReflect.Descriptor instead.
func (*EventFishKill) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{23}
}

func (x *EventFishKill) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishKill) GetKillList() []*KillFishData {
	if x != nil {
		return x.KillList
	}
	return nil
}

// ************ 冰冻 *************
type EventFishBingDongBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"` // 开始时间戳
	EndTime   int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`     // 结束时间戳
}

func (x *EventFishBingDongBuffer) Reset() {
	*x = EventFishBingDongBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishBingDongBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishBingDongBuffer) ProtoMessage() {}

func (x *EventFishBingDongBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishBingDongBuffer.ProtoReflect.Descriptor instead.
func (*EventFishBingDongBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{24}
}

func (x *EventFishBingDongBuffer) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *EventFishBingDongBuffer) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// ************ 玩家获得珍珠 *************
type EventFishAddZhenZhu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Rate  int32  `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`   // 炮值
	Count int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"` // 珍珠数量
}

func (x *EventFishAddZhenZhu) Reset() {
	*x = EventFishAddZhenZhu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddZhenZhu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddZhenZhu) ProtoMessage() {}

func (x *EventFishAddZhenZhu) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddZhenZhu.ProtoReflect.Descriptor instead.
func (*EventFishAddZhenZhu) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{25}
}

func (x *EventFishAddZhenZhu) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddZhenZhu) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *EventFishAddZhenZhu) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LabaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiZhu float32 `protobuf:"fixed32,1,opt,name=diZhu,proto3" json:"diZhu,omitempty"` // 底注
	CfgId int32   `protobuf:"varint,2,opt,name=cfgId,proto3" json:"cfgId,omitempty"`  // 抽到了哪组
	Coin  int64   `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`    // 奖励金币数
}

func (x *LabaData) Reset() {
	*x = LabaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabaData) ProtoMessage() {}

func (x *LabaData) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabaData.ProtoReflect.Descriptor instead.
func (*LabaData) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{26}
}

func (x *LabaData) GetDiZhu() float32 {
	if x != nil {
		return x.DiZhu
	}
	return 0
}

func (x *LabaData) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *LabaData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// 通知触发拉霸小游戏
type EventFishAddLaBaBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  string    `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Data *LabaData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EventFishAddLaBaBuffer) Reset() {
	*x = EventFishAddLaBaBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddLaBaBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddLaBaBuffer) ProtoMessage() {}

func (x *EventFishAddLaBaBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddLaBaBuffer.ProtoReflect.Descriptor instead.
func (*EventFishAddLaBaBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{27}
}

func (x *EventFishAddLaBaBuffer) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddLaBaBuffer) GetData() *LabaData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReqFishPlayLaBa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqFishPlayLaBa) Reset() {
	*x = ReqFishPlayLaBa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishPlayLaBa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishPlayLaBa) ProtoMessage() {}

func (x *ReqFishPlayLaBa) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishPlayLaBa.ProtoReflect.Descriptor instead.
func (*ReqFishPlayLaBa) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{28}
}

type RetFishPlayLaBa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetFishPlayLaBa) Reset() {
	*x = RetFishPlayLaBa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishPlayLaBa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishPlayLaBa) ProtoMessage() {}

func (x *RetFishPlayLaBa) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishPlayLaBa.ProtoReflect.Descriptor instead.
func (*RetFishPlayLaBa) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{29}
}

type EventFishLaBaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Coin int64  `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"` // 奖励金币数
}

func (x *EventFishLaBaResult) Reset() {
	*x = EventFishLaBaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishLaBaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishLaBaResult) ProtoMessage() {}

func (x *EventFishLaBaResult) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishLaBaResult.ProtoReflect.Descriptor instead.
func (*EventFishLaBaResult) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{30}
}

func (x *EventFishLaBaResult) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishLaBaResult) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// ************ buffer 转盘 *************
type BufferZhuanPanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GunValue int32 `protobuf:"varint,1,opt,name=gunValue,proto3" json:"gunValue,omitempty"` //触发转盘时的炮值
	CellNum  int32 `protobuf:"varint,2,opt,name=cellNum,proto3" json:"cellNum,omitempty"`   // 格子数量
	Index    int32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`       // 下标
	Rate     int32 `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`         // 倍率
	Coin     int64 `protobuf:"varint,5,opt,name=coin,proto3" json:"coin,omitempty"`         //奖励金币数
}

func (x *BufferZhuanPanData) Reset() {
	*x = BufferZhuanPanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferZhuanPanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferZhuanPanData) ProtoMessage() {}

func (x *BufferZhuanPanData) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferZhuanPanData.ProtoReflect.Descriptor instead.
func (*BufferZhuanPanData) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{31}
}

func (x *BufferZhuanPanData) GetGunValue() int32 {
	if x != nil {
		return x.GunValue
	}
	return 0
}

func (x *BufferZhuanPanData) GetCellNum() int32 {
	if x != nil {
		return x.CellNum
	}
	return 0
}

func (x *BufferZhuanPanData) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BufferZhuanPanData) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *BufferZhuanPanData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type EventFishAddBufferZhuanPan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  string                `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Data []*BufferZhuanPanData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EventFishAddBufferZhuanPan) Reset() {
	*x = EventFishAddBufferZhuanPan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddBufferZhuanPan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddBufferZhuanPan) ProtoMessage() {}

func (x *EventFishAddBufferZhuanPan) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddBufferZhuanPan.ProtoReflect.Descriptor instead.
func (*EventFishAddBufferZhuanPan) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{32}
}

func (x *EventFishAddBufferZhuanPan) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddBufferZhuanPan) GetData() []*BufferZhuanPanData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReqFishPlayBufferZhuanPan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReqFishPlayBufferZhuanPan) Reset() {
	*x = ReqFishPlayBufferZhuanPan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishPlayBufferZhuanPan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishPlayBufferZhuanPan) ProtoMessage() {}

func (x *ReqFishPlayBufferZhuanPan) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishPlayBufferZhuanPan.ProtoReflect.Descriptor instead.
func (*ReqFishPlayBufferZhuanPan) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{33}
}

func (x *ReqFishPlayBufferZhuanPan) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RetFishPlayBufferZhuanPan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetFishPlayBufferZhuanPan) Reset() {
	*x = RetFishPlayBufferZhuanPan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishPlayBufferZhuanPan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishPlayBufferZhuanPan) ProtoMessage() {}

func (x *RetFishPlayBufferZhuanPan) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishPlayBufferZhuanPan.ProtoReflect.Descriptor instead.
func (*RetFishPlayBufferZhuanPan) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{34}
}

type EventFishBufferZhuanPanResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Coin int64  `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"` //奖励金币数
}

func (x *EventFishBufferZhuanPanResult) Reset() {
	*x = EventFishBufferZhuanPanResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishBufferZhuanPanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishBufferZhuanPanResult) ProtoMessage() {}

func (x *EventFishBufferZhuanPanResult) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishBufferZhuanPanResult.ProtoReflect.Descriptor instead.
func (*EventFishBufferZhuanPanResult) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{35}
}

func (x *EventFishBufferZhuanPanResult) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishBufferZhuanPanResult) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type MoguData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GunValue int32  `protobuf:"varint,1,opt,name=gunValue,proto3" json:"gunValue,omitempty"` // 触发转盘时的炮值
	CfgId    int32  `protobuf:"varint,2,opt,name=cfgId,proto3" json:"cfgId,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Rate     int32  `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
	Coin     int64  `protobuf:"varint,5,opt,name=coin,proto3" json:"coin,omitempty"`
}

func (x *MoguData) Reset() {
	*x = MoguData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoguData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoguData) ProtoMessage() {}

func (x *MoguData) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoguData.ProtoReflect.Descriptor instead.
func (*MoguData) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{36}
}

func (x *MoguData) GetGunValue() int32 {
	if x != nil {
		return x.GunValue
	}
	return 0
}

func (x *MoguData) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *MoguData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MoguData) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *MoguData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type EventFishAddMoGuBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  string      `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Data []*MoguData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EventFishAddMoGuBuffer) Reset() {
	*x = EventFishAddMoGuBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddMoGuBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddMoGuBuffer) ProtoMessage() {}

func (x *EventFishAddMoGuBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddMoGuBuffer.ProtoReflect.Descriptor instead.
func (*EventFishAddMoGuBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{37}
}

func (x *EventFishAddMoGuBuffer) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddMoGuBuffer) GetData() []*MoguData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReqFishPlayMoGu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReqFishPlayMoGu) Reset() {
	*x = ReqFishPlayMoGu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishPlayMoGu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishPlayMoGu) ProtoMessage() {}

func (x *ReqFishPlayMoGu) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishPlayMoGu.ProtoReflect.Descriptor instead.
func (*ReqFishPlayMoGu) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{38}
}

func (x *ReqFishPlayMoGu) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RetFishPlayMoGu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RetFishPlayMoGu) Reset() {
	*x = RetFishPlayMoGu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishPlayMoGu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishPlayMoGu) ProtoMessage() {}

func (x *RetFishPlayMoGu) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishPlayMoGu.ProtoReflect.Descriptor instead.
func (*RetFishPlayMoGu) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{39}
}

type EventFishMoGuResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid  string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Coin int64  `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"` //奖励金币数
}

func (x *EventFishMoGuResult) Reset() {
	*x = EventFishMoGuResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishMoGuResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishMoGuResult) ProtoMessage() {}

func (x *EventFishMoGuResult) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishMoGuResult.ProtoReflect.Descriptor instead.
func (*EventFishMoGuResult) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{40}
}

func (x *EventFishMoGuResult) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishMoGuResult) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// ************ 金蟾 *************
type EventFishAddJinChanBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	CfgId int32  `protobuf:"varint,2,opt,name=cfgId,proto3" json:"cfgId,omitempty"` // 配置Id
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Rate  int32  `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"` // 倍率
	Coin  int64  `protobuf:"varint,5,opt,name=coin,proto3" json:"coin,omitempty"` //奖励金币数
}

func (x *EventFishAddJinChanBuffer) Reset() {
	*x = EventFishAddJinChanBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddJinChanBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddJinChanBuffer) ProtoMessage() {}

func (x *EventFishAddJinChanBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddJinChanBuffer.ProtoReflect.Descriptor instead.
func (*EventFishAddJinChanBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{41}
}

func (x *EventFishAddJinChanBuffer) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddJinChanBuffer) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *EventFishAddJinChanBuffer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventFishAddJinChanBuffer) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *EventFishAddJinChanBuffer) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// ************ 雅典娜 *************
type EventFishAddAthenaBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid     string  `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	SumCoin int64   `protobuf:"varint,2,opt,name=sumCoin,proto3" json:"sumCoin,omitempty"`      // 奖励金币总数
	Effect  []int64 `protobuf:"varint,3,rep,packed,name=effect,proto3" json:"effect,omitempty"` // 每次特效给多少个金币
}

func (x *EventFishAddAthenaBuffer) Reset() {
	*x = EventFishAddAthenaBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddAthenaBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddAthenaBuffer) ProtoMessage() {}

func (x *EventFishAddAthenaBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddAthenaBuffer.ProtoReflect.Descriptor instead.
func (*EventFishAddAthenaBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{42}
}

func (x *EventFishAddAthenaBuffer) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddAthenaBuffer) GetSumCoin() int64 {
	if x != nil {
		return x.SumCoin
	}
	return 0
}

func (x *EventFishAddAthenaBuffer) GetEffect() []int64 {
	if x != nil {
		return x.Effect
	}
	return nil
}

// ************ 波塞冬 *************
type EventFishAddPoseidonBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *EventFishAddPoseidonBuffer) Reset() {
	*x = EventFishAddPoseidonBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddPoseidonBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddPoseidonBuffer) ProtoMessage() {}

func (x *EventFishAddPoseidonBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddPoseidonBuffer.ProtoReflect.Descriptor instead.
func (*EventFishAddPoseidonBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{43}
}

func (x *EventFishAddPoseidonBuffer) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

// ************ 哈迪斯 *************
type EventFishAddHardessBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid      string          `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	KillList []*KillFishData `protobuf:"bytes,2,rep,name=KillList,proto3" json:"KillList,omitempty"`
}

func (x *EventFishAddHardessBuffer) Reset() {
	*x = EventFishAddHardessBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishAddHardessBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishAddHardessBuffer) ProtoMessage() {}

func (x *EventFishAddHardessBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishAddHardessBuffer.ProtoReflect.Descriptor instead.
func (*EventFishAddHardessBuffer) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{44}
}

func (x *EventFishAddHardessBuffer) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *EventFishAddHardessBuffer) GetKillList() []*KillFishData {
	if x != nil {
		return x.KillList
	}
	return nil
}

// ************ activity转盘 *************
type ReqFishGetActivityZhuanPanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqFishGetActivityZhuanPanInfo) Reset() {
	*x = ReqFishGetActivityZhuanPanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishGetActivityZhuanPanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishGetActivityZhuanPanInfo) ProtoMessage() {}

func (x *ReqFishGetActivityZhuanPanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishGetActivityZhuanPanInfo.ProtoReflect.Descriptor instead.
func (*ReqFishGetActivityZhuanPanInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{45}
}

type RetFishGetActivityZhuanPanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZhuanPanScore int64                       `protobuf:"varint,1,opt,name=zhuanPanScore,proto3" json:"zhuanPanScore,omitempty"`                               // 转盘积分
	TotalCoount   int32                       `protobuf:"varint,2,opt,name=totalCoount,proto3" json:"totalCoount,omitempty"`                                   // 累计转的次数
	RewardStatus  []common_proto.RewardStatus `protobuf:"varint,3,rep,packed,name=rewardStatus,proto3,enum=common.RewardStatus" json:"rewardStatus,omitempty"` // 奖励状态
}

func (x *RetFishGetActivityZhuanPanInfo) Reset() {
	*x = RetFishGetActivityZhuanPanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishGetActivityZhuanPanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishGetActivityZhuanPanInfo) ProtoMessage() {}

func (x *RetFishGetActivityZhuanPanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishGetActivityZhuanPanInfo.ProtoReflect.Descriptor instead.
func (*RetFishGetActivityZhuanPanInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{46}
}

func (x *RetFishGetActivityZhuanPanInfo) GetZhuanPanScore() int64 {
	if x != nil {
		return x.ZhuanPanScore
	}
	return 0
}

func (x *RetFishGetActivityZhuanPanInfo) GetTotalCoount() int32 {
	if x != nil {
		return x.TotalCoount
	}
	return 0
}

func (x *RetFishGetActivityZhuanPanInfo) GetRewardStatus() []common_proto.RewardStatus {
	if x != nil {
		return x.RewardStatus
	}
	return nil
}

type ReqFishPlayActivityZhuanPan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqFishPlayActivityZhuanPan) Reset() {
	*x = ReqFishPlayActivityZhuanPan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishPlayActivityZhuanPan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishPlayActivityZhuanPan) ProtoMessage() {}

func (x *ReqFishPlayActivityZhuanPan) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishPlayActivityZhuanPan.ProtoReflect.Descriptor instead.
func (*ReqFishPlayActivityZhuanPan) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{47}
}

type RetFishPlayActivityZhuanPan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId int32 `protobuf:"varint,1,opt,name=cfgId,proto3" json:"cfgId,omitempty"` // 配置Id
	Coin  int64 `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`   // 奖励金币数
}

func (x *RetFishPlayActivityZhuanPan) Reset() {
	*x = RetFishPlayActivityZhuanPan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishPlayActivityZhuanPan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishPlayActivityZhuanPan) ProtoMessage() {}

func (x *RetFishPlayActivityZhuanPan) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishPlayActivityZhuanPan.ProtoReflect.Descriptor instead.
func (*RetFishPlayActivityZhuanPan) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{48}
}

func (x *RetFishPlayActivityZhuanPan) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *RetFishPlayActivityZhuanPan) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type ReqFishGetActivityZhuanPanReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 领取哪个次数的奖励
}

func (x *ReqFishGetActivityZhuanPanReward) Reset() {
	*x = ReqFishGetActivityZhuanPanReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishGetActivityZhuanPanReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishGetActivityZhuanPanReward) ProtoMessage() {}

func (x *ReqFishGetActivityZhuanPanReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishGetActivityZhuanPanReward.ProtoReflect.Descriptor instead.
func (*ReqFishGetActivityZhuanPanReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{49}
}

func (x *ReqFishGetActivityZhuanPanReward) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RetFishGetActivityZhuanPanReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"` // 奖励金币数
}

func (x *RetFishGetActivityZhuanPanReward) Reset() {
	*x = RetFishGetActivityZhuanPanReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishGetActivityZhuanPanReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishGetActivityZhuanPanReward) ProtoMessage() {}

func (x *RetFishGetActivityZhuanPanReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishGetActivityZhuanPanReward.ProtoReflect.Descriptor instead.
func (*RetFishGetActivityZhuanPanReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{50}
}

func (x *RetFishGetActivityZhuanPanReward) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type GodBlessReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardType   GodBlessRewardType        `protobuf:"varint,1,opt,name=rewardType,proto3,enum=fish.GodBlessRewardType" json:"rewardType,omitempty"`
	Coin         int64                     `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`                                          // 奖励的金币数
	RewardStatus common_proto.RewardStatus `protobuf:"varint,3,opt,name=rewardStatus,proto3,enum=common.RewardStatus" json:"rewardStatus,omitempty"` // 奖励状态
	LeftGetTime  int64                     `protobuf:"varint,4,opt,name=leftGetTime,proto3" json:"leftGetTime,omitempty"`                            // 还剩多长时间能领
	GotTime      int64                     `protobuf:"varint,5,opt,name=gotTime,proto3" json:"gotTime,omitempty"`                                    // 领取时的时间，服务器用
}

func (x *GodBlessReward) Reset() {
	*x = GodBlessReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GodBlessReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GodBlessReward) ProtoMessage() {}

func (x *GodBlessReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GodBlessReward.ProtoReflect.Descriptor instead.
func (*GodBlessReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{51}
}

func (x *GodBlessReward) GetRewardType() GodBlessRewardType {
	if x != nil {
		return x.RewardType
	}
	return GodBlessRewardType_Bronze
}

func (x *GodBlessReward) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *GodBlessReward) GetRewardStatus() common_proto.RewardStatus {
	if x != nil {
		return x.RewardStatus
	}
	return common_proto.RewardStatus(0)
}

func (x *GodBlessReward) GetLeftGetTime() int64 {
	if x != nil {
		return x.LeftGetTime
	}
	return 0
}

func (x *GodBlessReward) GetGotTime() int64 {
	if x != nil {
		return x.GotTime
	}
	return 0
}

type ReqFishGetGodBlessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomType int32 `protobuf:"varint,1,opt,name=roomType,proto3" json:"roomType,omitempty"`
}

func (x *ReqFishGetGodBlessInfo) Reset() {
	*x = ReqFishGetGodBlessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishGetGodBlessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishGetGodBlessInfo) ProtoMessage() {}

func (x *ReqFishGetGodBlessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishGetGodBlessInfo.ProtoReflect.Descriptor instead.
func (*ReqFishGetGodBlessInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{52}
}

func (x *ReqFishGetGodBlessInfo) GetRoomType() int32 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

type RetFishGetGodBlessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolCoin     int64             `protobuf:"varint,1,opt,name=poolCoin,proto3" json:"poolCoin,omitempty"`        // 奖池大小
	IsReward     bool              `protobuf:"varint,2,opt,name=isReward,proto3" json:"isReward,omitempty"`        // 是否中奖
	RewardStatus []*GodBlessReward `protobuf:"bytes,3,rep,name=rewardStatus,proto3" json:"rewardStatus,omitempty"` // 奖励状态
}

func (x *RetFishGetGodBlessInfo) Reset() {
	*x = RetFishGetGodBlessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishGetGodBlessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishGetGodBlessInfo) ProtoMessage() {}

func (x *RetFishGetGodBlessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishGetGodBlessInfo.ProtoReflect.Descriptor instead.
func (*RetFishGetGodBlessInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{53}
}

func (x *RetFishGetGodBlessInfo) GetPoolCoin() int64 {
	if x != nil {
		return x.PoolCoin
	}
	return 0
}

func (x *RetFishGetGodBlessInfo) GetIsReward() bool {
	if x != nil {
		return x.IsReward
	}
	return false
}

func (x *RetFishGetGodBlessInfo) GetRewardStatus() []*GodBlessReward {
	if x != nil {
		return x.RewardStatus
	}
	return nil
}

type ReqFishGetGodBlessReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomType   int32              `protobuf:"varint,1,opt,name=roomType,proto3" json:"roomType,omitempty"`
	RewardType GodBlessRewardType `protobuf:"varint,2,opt,name=rewardType,proto3,enum=fish.GodBlessRewardType" json:"rewardType,omitempty"`
}

func (x *ReqFishGetGodBlessReward) Reset() {
	*x = ReqFishGetGodBlessReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishGetGodBlessReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishGetGodBlessReward) ProtoMessage() {}

func (x *ReqFishGetGodBlessReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishGetGodBlessReward.ProtoReflect.Descriptor instead.
func (*ReqFishGetGodBlessReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{54}
}

func (x *ReqFishGetGodBlessReward) GetRoomType() int32 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

func (x *ReqFishGetGodBlessReward) GetRewardType() GodBlessRewardType {
	if x != nil {
		return x.RewardType
	}
	return GodBlessRewardType_Bronze
}

type RetFishGetGodBlessReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"` // 奖励金币数
}

func (x *RetFishGetGodBlessReward) Reset() {
	*x = RetFishGetGodBlessReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishGetGodBlessReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishGetGodBlessReward) ProtoMessage() {}

func (x *RetFishGetGodBlessReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishGetGodBlessReward.ProtoReflect.Descriptor instead.
func (*RetFishGetGodBlessReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{55}
}

func (x *RetFishGetGodBlessReward) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

// 通知全部玩家
type EventFishUserTouchGodBless struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolCoin int64 `protobuf:"varint,1,opt,name=poolCoin,proto3" json:"poolCoin,omitempty"` // 剩余奖池大小
	Time     int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *EventFishUserTouchGodBless) Reset() {
	*x = EventFishUserTouchGodBless{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishUserTouchGodBless) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishUserTouchGodBless) ProtoMessage() {}

func (x *EventFishUserTouchGodBless) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishUserTouchGodBless.ProtoReflect.Descriptor instead.
func (*EventFishUserTouchGodBless) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{56}
}

func (x *EventFishUserTouchGodBless) GetPoolCoin() int64 {
	if x != nil {
		return x.PoolCoin
	}
	return 0
}

func (x *EventFishUserTouchGodBless) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// 发给触发的玩家
type EventFishTouchGodBlessToUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomType   int32 `protobuf:"varint,1,opt,name=roomType,proto3" json:"roomType,omitempty"`
	TotalCoin  int64 `protobuf:"varint,2,opt,name=totalCoin,proto3" json:"totalCoin,omitempty"`   // 总的奖励金币数
	BronzeCoin int64 `protobuf:"varint,3,opt,name=bronzeCoin,proto3" json:"bronzeCoin,omitempty"` // 青铜奖励数
	SilverCoin int64 `protobuf:"varint,4,opt,name=silverCoin,proto3" json:"silverCoin,omitempty"` // 白银奖励数
	GoldCoin   int64 `protobuf:"varint,5,opt,name=goldCoin,proto3" json:"goldCoin,omitempty"`     // 黄金奖励数
}

func (x *EventFishTouchGodBlessToUser) Reset() {
	*x = EventFishTouchGodBlessToUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishTouchGodBlessToUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishTouchGodBlessToUser) ProtoMessage() {}

func (x *EventFishTouchGodBlessToUser) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishTouchGodBlessToUser.ProtoReflect.Descriptor instead.
func (*EventFishTouchGodBlessToUser) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{57}
}

func (x *EventFishTouchGodBlessToUser) GetRoomType() int32 {
	if x != nil {
		return x.RoomType
	}
	return 0
}

func (x *EventFishTouchGodBlessToUser) GetTotalCoin() int64 {
	if x != nil {
		return x.TotalCoin
	}
	return 0
}

func (x *EventFishTouchGodBlessToUser) GetBronzeCoin() int64 {
	if x != nil {
		return x.BronzeCoin
	}
	return 0
}

func (x *EventFishTouchGodBlessToUser) GetSilverCoin() int64 {
	if x != nil {
		return x.SilverCoin
	}
	return 0
}

func (x *EventFishTouchGodBlessToUser) GetGoldCoin() int64 {
	if x != nil {
		return x.GoldCoin
	}
	return 0
}

type ReqFishComboRewardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqFishComboRewardInfo) Reset() {
	*x = ReqFishComboRewardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishComboRewardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishComboRewardInfo) ProtoMessage() {}

func (x *ReqFishComboRewardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishComboRewardInfo.ProtoReflect.Descriptor instead.
func (*ReqFishComboRewardInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{58}
}

type RetFishComboRewardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"` // 奖励金币数
}

func (x *RetFishComboRewardInfo) Reset() {
	*x = RetFishComboRewardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishComboRewardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishComboRewardInfo) ProtoMessage() {}

func (x *RetFishComboRewardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishComboRewardInfo.ProtoReflect.Descriptor instead.
func (*RetFishComboRewardInfo) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{59}
}

func (x *RetFishComboRewardInfo) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type ReqFishGetComboReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqFishGetComboReward) Reset() {
	*x = ReqFishGetComboReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFishGetComboReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFishGetComboReward) ProtoMessage() {}

func (x *ReqFishGetComboReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFishGetComboReward.ProtoReflect.Descriptor instead.
func (*ReqFishGetComboReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{60}
}

type RetFishGetComboReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"` // 奖励金币数
}

func (x *RetFishGetComboReward) Reset() {
	*x = RetFishGetComboReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetFishGetComboReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetFishGetComboReward) ProtoMessage() {}

func (x *RetFishGetComboReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetFishGetComboReward.ProtoReflect.Descriptor instead.
func (*RetFishGetComboReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{61}
}

func (x *RetFishGetComboReward) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

type EventFishComboReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin int64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"` // 奖励金币数
}

func (x *EventFishComboReward) Reset() {
	*x = EventFishComboReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fish_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFishComboReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFishComboReward) ProtoMessage() {}

func (x *EventFishComboReward) ProtoReflect() protoreflect.Message {
	mi := &file_fish_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFishComboReward.ProtoReflect.Descriptor instead.
func (*EventFishComboReward) Descriptor() ([]byte, []int) {
	return file_fish_proto_rawDescGZIP(), []int{62}
}

func (x *EventFishComboReward) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

var File_fish_proto protoreflect.FileDescriptor

var file_fish_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x69,
	0x73, 0x68, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x22, 0x0a, 0x04, 0x56, 0x65, 0x63, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x79, 0x22, 0x78, 0x0a, 0x08, 0x46, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x73,
	0x68, 0x2e, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x52, 0x08, 0x70, 0x61,
	0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x60,
	0x0a, 0x0a, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x69, 0x73,
	0x68, 0x2e, 0x56, 0x65, 0x63, 0x32, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xca, 0x01, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x05, 0x66, 0x69, 0x73, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66,
	0x69, 0x73, 0x68, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x66, 0x69,
	0x73, 0x68, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x46, 0x69,
	0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc4, 0x01,
	0x0a, 0x0c, 0x46, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x75, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x75, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x34,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x0c, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x69, 0x73, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x52, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x22, 0x47, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x69,
	0x73, 0x68, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x57, 0x0a, 0x15, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69,
	0x64, 0x22, 0x3e, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65,
	0x6e, 0x46, 0x69, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x46,
	0x69, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xbf, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61,
	0x79, 0x12, 0x22, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x56, 0x65, 0x63, 0x32, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x75, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c,
	0x61, 0x79, 0x22, 0xd3, 0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68,
	0x50, 0x6c, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x56, 0x65,
	0x63, 0x32, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x73, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x75, 0x6c, 0x6c, 0x65,
	0x74, 0x47, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x46,
	0x69, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x75, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x65, 0x74, 0x22, 0x12,
	0x0a, 0x10, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47,
	0x75, 0x6e, 0x22, 0x38, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x75, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x62, 0x65, 0x74, 0x22, 0x39, 0x0a, 0x0a,
	0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x48, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69,
	0x73, 0x68, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x48, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x68, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x46, 0x69,
	0x73, 0x68, 0x48, 0x69, 0x74, 0x22, 0x75, 0x0a, 0x0b, 0x46, 0x69, 0x73, 0x68, 0x48, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x73, 0x68, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x51, 0x0a, 0x0d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x08, 0x4b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x69, 0x73,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4b, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x51, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x67,
	0x44, 0x6f, 0x6e, 0x67, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x41,
	0x64, 0x64, 0x5a, 0x68, 0x65, 0x6e, 0x5a, 0x68, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x5a, 0x68, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x64, 0x69, 0x5a, 0x68, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x66, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x66, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x22, 0x4e, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x41, 0x64,
	0x64, 0x4c, 0x61, 0x42, 0x61, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x69,
	0x73, 0x68, 0x2e, 0x6c, 0x61, 0x62, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79,
	0x4c, 0x61, 0x42, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x50,
	0x6c, 0x61, 0x79, 0x4c, 0x61, 0x42, 0x61, 0x22, 0x3b, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x73, 0x68, 0x4c, 0x61, 0x42, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5a,
	0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x75, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67,
	0x75, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22,
	0x5c, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x41, 0x64, 0x64, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x66, 0x69, 0x73, 0x68, 0x2e, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5a, 0x68, 0x75, 0x61, 0x6e,
	0x50, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a,
	0x19, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x22, 0x45, 0x0a,
	0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x22, 0x78, 0x0a, 0x08, 0x6d, 0x6f, 0x67, 0x75, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x67, 0x75, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x67, 0x75, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x66, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x66, 0x67,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x4e,
	0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x41, 0x64, 0x64, 0x4d, 0x6f,
	0x47, 0x75, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e,
	0x6d, 0x6f, 0x67, 0x75, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x47,
	0x75, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x46, 0x69,
	0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x47, 0x75, 0x22, 0x3b, 0x0a, 0x13, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x47, 0x75, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x7f, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x73, 0x68, 0x41, 0x64, 0x64, 0x4a, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x66, 0x67, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x66, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x5e, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x73, 0x68, 0x41, 0x64, 0x64, 0x41, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x43, 0x6f, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x43, 0x6f, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x2e, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x73, 0x68, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x73, 0x68, 0x41, 0x64, 0x64, 0x48, 0x61, 0x72, 0x64, 0x65, 0x73, 0x73, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x4b, 0x69, 0x6c, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x69, 0x73, 0x68,
	0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x46, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4b,
	0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x71, 0x46, 0x69,
	0x73, 0x68, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5a, 0x68, 0x75,
	0x61, 0x6e, 0x50, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x1e, 0x52, 0x65,
	0x74, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d,
	0x7a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x7a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1d,
	0x0a, 0x1b, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x22, 0x47, 0x0a,
	0x1b, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x66, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x66, 0x67,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x38, 0x0a, 0x20, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73,
	0x68, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5a, 0x68, 0x75, 0x61,
	0x6e, 0x50, 0x61, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x36, 0x0a, 0x20, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x47, 0x6f, 0x64,
	0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x34, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x64,
	0x42, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73,
	0x68, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x70, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74,
	0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x66, 0x69, 0x73, 0x68, 0x2e, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x22, 0x4c, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x73, 0x68,
	0x54, 0x6f, 0x75, 0x63, 0x68, 0x47, 0x6f, 0x64, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x72, 0x6f, 0x6e, 0x7a, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x62, 0x72, 0x6f, 0x6e, 0x7a, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x69, 0x6c, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x67, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x71,
	0x46, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6d, 0x62, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x62, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65,
	0x74, 0x46, 0x69, 0x73, 0x68, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x22, 0x2a, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x62, 0x6f, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x2a, 0x94, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x5a, 0x68, 0x75, 0x61, 0x6e, 0x50, 0x61, 0x6e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x79, 0x4c, 0x61, 0x42, 0x61, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79,
	0x4d, 0x6f, 0x47, 0x75, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x4a, 0x69,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x41,
	0x74, 0x68, 0x65, 0x6e, 0x61, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x50,
	0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6c, 0x61,
	0x79, 0x48, 0x61, 0x72, 0x64, 0x65, 0x73, 0x73, 0x10, 0x07, 0x2a, 0x3a, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07,
	0x5a, 0x68, 0x75, 0x44, 0x6f, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x69, 0x63,
	0x6b, 0x4f, 0x75, 0x74, 0x10, 0x02, 0x2a, 0x40, 0x0a, 0x0f, 0x46, 0x69, 0x73, 0x68, 0x42, 0x75,
	0x6c, 0x6c, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x6f, 0x44, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x4a, 0x69, 0x61, 0x53, 0x75, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x51,
	0x69, 0x61, 0x6e, 0x67, 0x4a, 0x69, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x12, 0x47, 0x6f, 0x64, 0x42,
	0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x72, 0x6f, 0x6e, 0x7a, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69,
	0x6c, 0x76, 0x65, 0x72, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x10, 0x02,
	0x42, 0x20, 0x5a, 0x1e, 0x62, 0x79, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fish_proto_rawDescOnce sync.Once
	file_fish_proto_rawDescData = file_fish_proto_rawDesc
)

func file_fish_proto_rawDescGZIP() []byte {
	file_fish_proto_rawDescOnce.Do(func() {
		file_fish_proto_rawDescData = protoimpl.X.CompressGZIP(file_fish_proto_rawDescData)
	})
	return file_fish_proto_rawDescData
}

var file_fish_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_fish_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_fish_proto_goTypes = []interface{}{
	(FishUserStatus)(0),                      // 0: fish.FishUserStatus
	(UserQuitReason)(0),                      // 1: fish.UserQuitReason
	(FishBulletSkill)(0),                     // 2: fish.FishBulletSkill
	(GodBlessRewardType)(0),                  // 3: fish.GodBlessRewardType
	(*Vec2)(nil),                             // 4: fish.Vec2
	(*FishInfo)(nil),                         // 5: fish.FishInfo
	(*BezierPath)(nil),                       // 6: fish.BezierPath
	(*RoomInfo)(nil),                         // 7: fish.RoomInfo
	(*FishUserInfo)(nil),                     // 8: fish.FishUserInfo
	(*KillFishData)(nil),                     // 9: fish.KillFishData
	(*ReqUserJoinRoom)(nil),                  // 10: fish.ReqUserJoinRoom
	(*RetUserJoinRoom)(nil),                  // 11: fish.RetUserJoinRoom
	(*EventFishUserJoinRoom)(nil),            // 12: fish.EventFishUserJoinRoom
	(*ReqUserQuitRoom)(nil),                  // 13: fish.ReqUserQuitRoom
	(*RetUserQuitRoom)(nil),                  // 14: fish.RetUserQuitRoom
	(*EventFishUserQuitRoom)(nil),            // 15: fish.EventFishUserQuitRoom
	(*EventFishUserDisConnect)(nil),          // 16: fish.EventFishUserDisConnect
	(*EventFishGenFish)(nil),                 // 17: fish.EventFishGenFish
	(*ReqFishPlay)(nil),                      // 18: fish.ReqFishPlay
	(*RetFishPlay)(nil),                      // 19: fish.RetFishPlay
	(*EventFishPlay)(nil),                    // 20: fish.EventFishPlay
	(*ReqFishChangeGun)(nil),                 // 21: fish.ReqFishChangeGun
	(*RetFishChangeGun)(nil),                 // 22: fish.RetFishChangeGun
	(*EventFishChangeGun)(nil),               // 23: fish.EventFishChangeGun
	(*ReqFishHit)(nil),                       // 24: fish.ReqFishHit
	(*RetFishHit)(nil),                       // 25: fish.RetFishHit
	(*FishHitInfo)(nil),                      // 26: fish.FishHitInfo
	(*EventFishKill)(nil),                    // 27: fish.EventFishKill
	(*EventFishBingDongBuffer)(nil),          // 28: fish.EventFishBingDongBuffer
	(*EventFishAddZhenZhu)(nil),              // 29: fish.EventFishAddZhenZhu
	(*LabaData)(nil),                         // 30: fish.labaData
	(*EventFishAddLaBaBuffer)(nil),           // 31: fish.EventFishAddLaBaBuffer
	(*ReqFishPlayLaBa)(nil),                  // 32: fish.ReqFishPlayLaBa
	(*RetFishPlayLaBa)(nil),                  // 33: fish.RetFishPlayLaBa
	(*EventFishLaBaResult)(nil),              // 34: fish.EventFishLaBaResult
	(*BufferZhuanPanData)(nil),               // 35: fish.bufferZhuanPanData
	(*EventFishAddBufferZhuanPan)(nil),       // 36: fish.EventFishAddBufferZhuanPan
	(*ReqFishPlayBufferZhuanPan)(nil),        // 37: fish.ReqFishPlayBufferZhuanPan
	(*RetFishPlayBufferZhuanPan)(nil),        // 38: fish.RetFishPlayBufferZhuanPan
	(*EventFishBufferZhuanPanResult)(nil),    // 39: fish.EventFishBufferZhuanPanResult
	(*MoguData)(nil),                         // 40: fish.moguData
	(*EventFishAddMoGuBuffer)(nil),           // 41: fish.EventFishAddMoGuBuffer
	(*ReqFishPlayMoGu)(nil),                  // 42: fish.ReqFishPlayMoGu
	(*RetFishPlayMoGu)(nil),                  // 43: fish.RetFishPlayMoGu
	(*EventFishMoGuResult)(nil),              // 44: fish.EventFishMoGuResult
	(*EventFishAddJinChanBuffer)(nil),        // 45: fish.EventFishAddJinChanBuffer
	(*EventFishAddAthenaBuffer)(nil),         // 46: fish.EventFishAddAthenaBuffer
	(*EventFishAddPoseidonBuffer)(nil),       // 47: fish.EventFishAddPoseidonBuffer
	(*EventFishAddHardessBuffer)(nil),        // 48: fish.EventFishAddHardessBuffer
	(*ReqFishGetActivityZhuanPanInfo)(nil),   // 49: fish.ReqFishGetActivityZhuanPanInfo
	(*RetFishGetActivityZhuanPanInfo)(nil),   // 50: fish.RetFishGetActivityZhuanPanInfo
	(*ReqFishPlayActivityZhuanPan)(nil),      // 51: fish.ReqFishPlayActivityZhuanPan
	(*RetFishPlayActivityZhuanPan)(nil),      // 52: fish.RetFishPlayActivityZhuanPan
	(*ReqFishGetActivityZhuanPanReward)(nil), // 53: fish.ReqFishGetActivityZhuanPanReward
	(*RetFishGetActivityZhuanPanReward)(nil), // 54: fish.RetFishGetActivityZhuanPanReward
	(*GodBlessReward)(nil),                   // 55: fish.GodBlessReward
	(*ReqFishGetGodBlessInfo)(nil),           // 56: fish.ReqFishGetGodBlessInfo
	(*RetFishGetGodBlessInfo)(nil),           // 57: fish.RetFishGetGodBlessInfo
	(*ReqFishGetGodBlessReward)(nil),         // 58: fish.ReqFishGetGodBlessReward
	(*RetFishGetGodBlessReward)(nil),         // 59: fish.RetFishGetGodBlessReward
	(*EventFishUserTouchGodBless)(nil),       // 60: fish.EventFishUserTouchGodBless
	(*EventFishTouchGodBlessToUser)(nil),     // 61: fish.EventFishTouchGodBlessToUser
	(*ReqFishComboRewardInfo)(nil),           // 62: fish.ReqFishComboRewardInfo
	(*RetFishComboRewardInfo)(nil),           // 63: fish.RetFishComboRewardInfo
	(*ReqFishGetComboReward)(nil),            // 64: fish.ReqFishGetComboReward
	(*RetFishGetComboReward)(nil),            // 65: fish.RetFishGetComboReward
	(*EventFishComboReward)(nil),             // 66: fish.EventFishComboReward
	(*common_proto.UserInfo)(nil),            // 67: common.UserInfo
	(common_proto.RewardStatus)(0),           // 68: common.RewardStatus
}
var file_fish_proto_depIdxs = []int32{
	6,  // 0: fish.FishInfo.pathList:type_name -> fish.BezierPath
	4,  // 1: fish.BezierPath.path:type_name -> fish.Vec2
	5,  // 2: fish.RoomInfo.fishs:type_name -> fish.FishInfo
	8,  // 3: fish.RoomInfo.userInfos:type_name -> fish.FishUserInfo
	67, // 4: fish.FishUserInfo.userInfo:type_name -> common.UserInfo
	0,  // 5: fish.FishUserInfo.userStatus:type_name -> fish.FishUserStatus
	7,  // 6: fish.RetUserJoinRoom.roomInfo:type_name -> fish.RoomInfo
	8,  // 7: fish.EventFishUserJoinRoom.userInfo:type_name -> fish.FishUserInfo
	1,  // 8: fish.EventFishUserQuitRoom.reason:type_name -> fish.UserQuitReason
	5,  // 9: fish.EventFishGenFish.fishList:type_name -> fish.FishInfo
	4,  // 10: fish.ReqFishPlay.target:type_name -> fish.Vec2
	4,  // 11: fish.EventFishPlay.target:type_name -> fish.Vec2
	26, // 12: fish.ReqFishHit.hitInfo:type_name -> fish.FishHitInfo
	9,  // 13: fish.EventFishKill.KillList:type_name -> fish.KillFishData
	30, // 14: fish.EventFishAddLaBaBuffer.data:type_name -> fish.labaData
	35, // 15: fish.EventFishAddBufferZhuanPan.data:type_name -> fish.bufferZhuanPanData
	40, // 16: fish.EventFishAddMoGuBuffer.data:type_name -> fish.moguData
	9,  // 17: fish.EventFishAddHardessBuffer.KillList:type_name -> fish.KillFishData
	68, // 18: fish.RetFishGetActivityZhuanPanInfo.rewardStatus:type_name -> common.RewardStatus
	3,  // 19: fish.GodBlessReward.rewardType:type_name -> fish.GodBlessRewardType
	68, // 20: fish.GodBlessReward.rewardStatus:type_name -> common.RewardStatus
	55, // 21: fish.RetFishGetGodBlessInfo.rewardStatus:type_name -> fish.GodBlessReward
	3,  // 22: fish.ReqFishGetGodBlessReward.rewardType:type_name -> fish.GodBlessRewardType
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_fish_proto_init() }
func file_fish_proto_init() {
	if File_fish_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fish_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vec2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BezierPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillFishData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserJoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetUserJoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishUserJoinRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserQuitRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetUserQuitRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishUserQuitRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishUserDisConnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishGenFish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishPlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishPlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishPlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishChangeGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishChangeGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishChangeGun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishHit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishHit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FishHitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishKill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishBingDongBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddZhenZhu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddLaBaBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishPlayLaBa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishPlayLaBa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishLaBaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferZhuanPanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddBufferZhuanPan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishPlayBufferZhuanPan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishPlayBufferZhuanPan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishBufferZhuanPanResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoguData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddMoGuBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishPlayMoGu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishPlayMoGu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishMoGuResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddJinChanBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddAthenaBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddPoseidonBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishAddHardessBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishGetActivityZhuanPanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishGetActivityZhuanPanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishPlayActivityZhuanPan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishPlayActivityZhuanPan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishGetActivityZhuanPanReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishGetActivityZhuanPanReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GodBlessReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishGetGodBlessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishGetGodBlessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishGetGodBlessReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishGetGodBlessReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishUserTouchGodBless); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishTouchGodBlessToUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishComboRewardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishComboRewardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFishGetComboReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetFishGetComboReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fish_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFishComboReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fish_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fish_proto_goTypes,
		DependencyIndexes: file_fish_proto_depIdxs,
		EnumInfos:         file_fish_proto_enumTypes,
		MessageInfos:      file_fish_proto_msgTypes,
	}.Build()
	File_fish_proto = out.File
	file_fish_proto_rawDesc = nil
	file_fish_proto_goTypes = nil
	file_fish_proto_depIdxs = nil
}
